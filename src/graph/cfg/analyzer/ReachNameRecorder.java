package graph.cfg.analyzer;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

/**
 * @author Zhou Xiaocong
 * @since 2017Äê9ÔÂ7ÈÕ
 * @version 1.0
 *
 */
public class ReachNameRecorder implements IReachNameRecorder {
	// generatedNameList records those defined name which are generated by the current node
	protected List<ReachNameDefinition> generatedNameList = null;
	
	// definedNameList records those defined name which can reach the current node 
	protected List<ReachNameDefinition> definedNameList = null;
	
	public ReachNameRecorder() {
	}

	public void addGeneratedName(ReachNameDefinition definedName) {
		if (generatedNameList == null) generatedNameList = new ArrayList<ReachNameDefinition>();
		generatedNameList.add(definedName);
	}
	
	public boolean addReachName(ReachNameDefinition definedName) {
		if (definedNameList == null) definedNameList = new LinkedList<ReachNameDefinition>();

		if (!definedNameList.contains(definedName)) {
			definedNameList.add(definedName);
			return true;
		} else return false;
	}
	
	public List<ReachNameDefinition> getReachNameList() {
		if (definedNameList == null) {
			definedNameList = new LinkedList<ReachNameDefinition>();
		}
		return definedNameList;
	}
	
	public List<ReachNameDefinition> getGeneratedNameList() {
		if (generatedNameList == null) {
			generatedNameList = new ArrayList<ReachNameDefinition>();
		}
		return generatedNameList;
	}
}
